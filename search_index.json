[["index.html", "Computational Genomics with R Book Club Welcome", " Computational Genomics with R Book Club The R4DS Online Learning Community 2022-10-15 Welcome Welcome to the bookclub! This is a companion for the book Computational Genomics with R by Altuna Akalin (Chapman &amp; Hall, copyright 2021, 9781498781855). This companion is available at r4ds.io/comp_genom. This website is being developed by the R4DS Online Learning Community. Follow along, and join the community to participate. This companion follows the R4DS Online Learning Community Code of Conduct. "],["book-club-meetings.html", "Book club meetings", " Book club meetings Each week, a volunteer will present a chapter from the book (or part of a chapter). This is the best way to learn the material. Presentations will usually consist of a review of the material, a discussion, and/or a demonstration of the principles presented in that chapter. More information about how to present is available in the github repo. Presentations will be recorded, and will be available on the R4DS Online Learning Community YouTube Channel. "],["pace.html", "Pace", " Pace We’ll try to cover 1 chapter/week, but… …It’s ok to split chapters when they feel like too much. We will try to meet every week, but will likely take some breaks for holidays, etc. "],["introduction-to-genomics.html", "Chapter 1 Introduction to Genomics", " Chapter 1 Introduction to Genomics Chapter Objectives: Describe what makes up a gene and genome Understand how genes and genomes are regulated Differentiate between the different types of genome mutations List the general steps required of high-throughput sequencing "],["genes-genomes-and-genomics.html", "1.1 Genes, Genomes, and Genomics", " 1.1 Genes, Genomes, and Genomics DNA: the building blocks of life. Gene: A unit of nucleotides that when transcribed, create a functional RNA sequence. RNA: intermediate messenger; different types! Protein: macromolecules consisting of amino acids that are translated from an RNA sequence. Genome: the sum of all genes; the instructions of life. Genomics: The study of genomes (structure, function, sequences) "],["gene-regulation.html", "1.2 Gene regulation", " 1.2 Gene regulation The process by which genes are controlled. When they are turned on or off, how much to make. Often has a cascading effect. 1.2.1 Transcriptional regulation Control output of transcripts before transcription occurs. Transcription factors Epigenetic (histone) modifications 1.2.2 Post-transcriptional regulation Control what happens to transcripts after they are made. Splicing non-coding RNAs (ncRNAs) "],["genetic-mutations.html", "1.3 Genetic mutations", " 1.3 Genetic mutations Gene-level mutations Chromosomal-level mutations "],["sequencing.html", "1.4 Sequencing", " 1.4 Sequencing Types of analyses possible from sequencing data. Source: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4266812/figure/f0025/ "],["resources.html", "1.5 Resources", " 1.5 Resources General knowledge Kahn Academy Genome.gov NGS Sequencing Sequencing by Synthesis (Illumina) Intro to Illumina Seq Illumina Official Video Nanopore (Oxford Nanopore Technologies) Nanopore DNA Sequencing ONT Official Video "],["meeting-videos.html", "1.6 Meeting Videos", " 1.6 Meeting Videos 1.6.1 Cohort 1 Meeting chat log LOG "],["introduction-to-r-for-genomic-data-analysis.html", "Chapter 2 Introduction to R for Genomic Data Analysis", " Chapter 2 Introduction to R for Genomic Data Analysis Learning objectives: Understand the general workflow of genomic analysis in R Comprehend differences between data structures and data types Download and install R, RStudio, Bioconductor, compGenomRData Reading and writing tables Construct plots in base R and/or ggplot Functions and loops "],["genomic-data-analysis-a-high-level-view-in-r.html", "2.1 Genomic data analysis (a high level view)– in R!", " 2.1 Genomic data analysis (a high level view)– in R! A high level overview of genomic analysis. Source: https://www.intechopen.com/chapters/50574 Analyses that can be performed in R. Source: https://image.slideserve.com/835537/bioconductor-l.jpg "],["getting-started-with-r-and-bioconductor.html", "2.2 Getting started with R and Bioconductor", " 2.2 Getting started with R and Bioconductor Install R and RStudio if you haven’t done so already (see resources) Install Bioconductor install.packages(&quot;BiocManager&quot;) https://www.bioconductor.org/install/ Installing Bioconductor packages BiocManager::install(&quot;xyzpackage&quot;) Installing packages from Github library(devtools) devtools::install_github(&quot;compgenomr/compGenomRData&quot;) "],["data-stuctures-and-data-types.html", "2.3 Data stuctures and data types", " 2.3 Data stuctures and data types Data Structures Data types "],["reading-and-writing-data.html", "2.4 Reading and writing data", " 2.4 Reading and writing data First download the compGenomRData package from Github if you haven’t done so yet. We are using this as a companion for the course! devtools::install_github(&quot;compgenomr/compGenomRData&quot;) Read files in base R cpgiFilePath=system.file(&quot;extdata&quot;, &quot;subset.cpgi.hg18.bed&quot;, package=&quot;compGenomRData&quot;) # read CpG island BED file cpgi.df &lt;- read.table(cpgiFilePath, header = FALSE) enhancerFilePath=system.file(&quot;extdata&quot;, &quot;subset.enhancers.hg18.bed&quot;, package=&quot;compGenomRData&quot;) # read enhancer marker BED file enh.df &lt;- read.table(enhancerFilePath, header = FALSE) # check first lines to see how the data looks like head(enh.df) ## V1 V2 V3 V4 V5 V6 V7 V8 V9 ## 1 chr20 266275 267925 . 1000 . 9.11 13.1693 -1 ## 2 chr20 287400 294500 . 1000 . 10.53 13.0231 -1 ## 3 chr20 300500 302500 . 1000 . 9.10 13.3935 -1 ## 4 chr20 330400 331800 . 1000 . 6.39 13.5105 -1 ## 5 chr20 341425 343400 . 1000 . 6.20 12.9852 -1 ## 6 chr20 437975 439900 . 1000 . 6.31 13.5184 -1 the key here is read.table() Reading large tables with readr. library(readr) df.f2=read_table(enhancerFilePath, col_names = FALSE) ## ## ── Column specification ──────────────────────────────────────────────────────── ## cols( ## X1 = col_character(), ## X2 = col_double(), ## X3 = col_double(), ## X4 = col_character(), ## X5 = col_double(), ## X6 = col_character(), ## X7 = col_double(), ## X8 = col_double(), ## X9 = col_double() ## ) df.f2 ## # A tibble: 50,416 × 9 ## X1 X2 X3 X4 X5 X6 X7 X8 X9 ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 chr20 266275 267925 . 1000 . 9.11 13.2 -1 ## 2 chr20 287400 294500 . 1000 . 10.5 13.0 -1 ## 3 chr20 300500 302500 . 1000 . 9.1 13.4 -1 ## 4 chr20 330400 331800 . 1000 . 6.39 13.5 -1 ## 5 chr20 341425 343400 . 1000 . 6.2 13.0 -1 ## 6 chr20 437975 439900 . 1000 . 6.31 13.5 -1 ## 7 chr20 516650 518525 . 1000 . 12.5 13.7 -1 ## 8 chr20 519100 521475 . 1000 . 7.1 13.1 -1 ## 9 chr20 543800 545775 . 1000 . 9.52 13.0 -1 ## 10 chr20 573550 574975 . 1000 . 7.71 13.7 -1 ## # … with 50,406 more rows Readr is part of the tidyverse (tidyverse is life). Writing data w/ write.table write.table(enh.df,file=&quot;enh.txt&quot;,quote=FALSE, row.names=FALSE,col.names=FALSE,sep=&quot;\\t&quot;) The type of file it is save as depends on the sep (^ saved a tab separated file or .tsv) Saving/loading R objects directly into/from a file # save() saves many objects at once, regardless of class save(cpgi.df,enh.df,file=&quot;mydata.RData&quot;) load(&quot;mydata.RData&quot;) # saveRDS() can save one object at a type saveRDS(cpgi.df,file=&quot;cpgi.rds&quot;) x=readRDS(&quot;cpgi.rds&quot;) head(x) # when using saveRDS() must assign output of readRDS() to new variable in session "],["plots-base-r-vs-ggplot.html", "2.5 Plots: Base R vs ggplot", " 2.5 Plots: Base R vs ggplot A great comparison of the two systems! ggplot: “The basic idea is that you can split a chart into graphical objects — data, scale, coordinate system, and annotation — and think about them separately. When you put it all together, you get a complete chart.” base: “specify everything in the function arguments” "],["functions-and-loops.html", "2.6 Functions and Loops", " 2.6 Functions and Loops Components of a basic function my_function &lt;-function(x,y){ # create function as object (my_function &lt;- function()) # define inputs of function (function(x,y)) # function is written between {} brackets result=x^2+y^2 # what your function does with inputs return(result) # return() gives the result as the output } my_function(2,3) # now try the function out ## [1] 13 A function with conditions largeCpGi&lt;-function(bedRow){ # function takes input one row of CpGi data frame # generated earlier under &quot;Read files in base R&quot; cpglen=bedRow[3]-bedRow[2]+1 # subtract column 3 value from column 2 value + 1 if(cpglen&gt;1500){ # if the result (cpglen) meets this parameter # (is larger than 1500) cat(&quot;this is large\\n&quot;) # cat[used in place of print/return] &quot;this is # large\\n&quot; --&gt; the \\n means print a new line } else if(cpglen&lt;=1500 &amp; cpglen&gt;700){ # else if -- if the above was not true, # see if result meets these parameters cat(&quot;this is normal\\n&quot;) } else{ # if the result did not meet previous parameters cat(&quot;this is short\\n&quot;) } } largeCpGi(cpgi.df[10,]) # function to take 10th row of data frame ## this is short largeCpGi(cpgi.df[10]) # what happens if you input this instead? ## Error in `[.data.frame`(cpgi.df, 10): undefined columns selected largeCpGi(cpgi.df(10)) # or this? ## Error in cpgi.df(10): could not find function &quot;cpgi.df&quot; Loops to repeat a function multiple times result=c() # this is where we will keep the lengths. for now it is an empty vector. for(i in 1:100){ # start a loop to iterate 100 times len=cpgi.df[i,3]-cpgi.df[i,2]+1 # to calculate the length of each cpgi # where i is each row of the data frame cpgi.df result=c(result,len) # append the length to the result each time } result # check the result ## [1] 277 360 383 1325 3498 1602 1317 250 871 226 788 300 1001 311 790 ## [16] 224 1259 725 525 690 426 636 827 1010 237 601 484 297 968 441 ## [31] 793 235 212 648 656 659 794 324 356 729 786 202 401 1787 1045 ## [46] 265 203 498 455 203 821 745 1013 341 1795 801 333 885 520 497 ## [61] 1403 1737 1192 1007 1142 1009 276 626 1440 512 552 344 268 233 273 ## [76] 232 2353 456 937 941 985 1584 878 357 758 884 1355 979 1294 757 ## [91] 786 807 1118 833 931 533 618 1965 321 1048 Loops are not always the most efficient way to work in R. We can use special functions to perform loops. In base R: the apply family lapply applies a function to a single list or vector mapply is like lapply but over multiple vectors/lists vectorized function can be summed (+, rowSums, colSums) In the tidyverse: purrr –&gt; specifically map "],["resources-1.html", "2.7 Resources", " 2.7 Resources R and R Studio R R Studio Bioconductor Tidyverse apply functions purr and map "],["meeting-videos-1.html", "2.8 Meeting Videos", " 2.8 Meeting Videos 2.8.1 Cohort 1 Meeting chat log LOG "],["statistics-for-genomics.html", "Chapter 3 Statistics for Genomics", " Chapter 3 Statistics for Genomics Learning objectives: THESE ARE NICE TO HAVE BUT NOT ABSOLUTELY NECESSARY "],["slide-1.html", "3.1 SLIDE 1", " 3.1 SLIDE 1 ADD SLIDES AS SECTIONS (##). TRY TO KEEP THEM RELATIVELY SLIDE-LIKE; THESE ARE NOTES, NOT THE BOOK ITSELF. "],["meeting-videos-2.html", "3.2 Meeting Videos", " 3.2 Meeting Videos 3.2.1 Cohort 1 Meeting chat log LOG "],["exploratory-data-analysis-with-unsupervised-machine-learning.html", "Chapter 4 Exploratory Data Analysis with Unsupervised Machine Learning", " Chapter 4 Exploratory Data Analysis with Unsupervised Machine Learning Learning objectives: THESE ARE NICE TO HAVE BUT NOT ABSOLUTELY NECESSARY "],["slide-1-1.html", "4.1 SLIDE 1", " 4.1 SLIDE 1 ADD SLIDES AS SECTIONS (##). TRY TO KEEP THEM RELATIVELY SLIDE-LIKE; THESE ARE NOTES, NOT THE BOOK ITSELF. "],["meeting-videos-3.html", "4.2 Meeting Videos", " 4.2 Meeting Videos 4.2.1 Cohort 1 Meeting chat log LOG "],["predictive-modeling-with-supervised-machine-learning.html", "Chapter 5 Predictive Modeling with Supervised Machine Learning", " Chapter 5 Predictive Modeling with Supervised Machine Learning Learning objectives: THESE ARE NICE TO HAVE BUT NOT ABSOLUTELY NECESSARY "],["slide-1-2.html", "5.1 SLIDE 1", " 5.1 SLIDE 1 ADD SLIDES AS SECTIONS (##). TRY TO KEEP THEM RELATIVELY SLIDE-LIKE; THESE ARE NOTES, NOT THE BOOK ITSELF. "],["meeting-videos-4.html", "5.2 Meeting Videos", " 5.2 Meeting Videos 5.2.1 Cohort 1 Meeting chat log LOG "],["operations-on-genomic-intervals-and-genome-arithmetic.html", "Chapter 6 Operations on Genomic Intervals and Genome Arithmetic", " Chapter 6 Operations on Genomic Intervals and Genome Arithmetic Learning objectives: THESE ARE NICE TO HAVE BUT NOT ABSOLUTELY NECESSARY "],["slide-1-3.html", "6.1 SLIDE 1", " 6.1 SLIDE 1 ADD SLIDES AS SECTIONS (##). TRY TO KEEP THEM RELATIVELY SLIDE-LIKE; THESE ARE NOTES, NOT THE BOOK ITSELF. "],["meeting-videos-5.html", "6.2 Meeting Videos", " 6.2 Meeting Videos 6.2.1 Cohort 1 Meeting chat log LOG "],["quality-check-processing-and-alignment-of-high-throughput-sequencing-reads.html", "Chapter 7 Quality Check, Processing and Alignment of High-throughput Sequencing Reads", " Chapter 7 Quality Check, Processing and Alignment of High-throughput Sequencing Reads Learning objectives: THESE ARE NICE TO HAVE BUT NOT ABSOLUTELY NECESSARY "],["slide-1-4.html", "7.1 SLIDE 1", " 7.1 SLIDE 1 ADD SLIDES AS SECTIONS (##). TRY TO KEEP THEM RELATIVELY SLIDE-LIKE; THESE ARE NOTES, NOT THE BOOK ITSELF. "],["meeting-videos-6.html", "7.2 Meeting Videos", " 7.2 Meeting Videos 7.2.1 Cohort 1 Meeting chat log LOG "],["rna-seq-analysis.html", "Chapter 8 RNA-seq Analysis", " Chapter 8 RNA-seq Analysis Learning objectives: THESE ARE NICE TO HAVE BUT NOT ABSOLUTELY NECESSARY "],["slide-1-5.html", "8.1 SLIDE 1", " 8.1 SLIDE 1 ADD SLIDES AS SECTIONS (##). TRY TO KEEP THEM RELATIVELY SLIDE-LIKE; THESE ARE NOTES, NOT THE BOOK ITSELF. "],["meeting-videos-7.html", "8.2 Meeting Videos", " 8.2 Meeting Videos 8.2.1 Cohort 1 Meeting chat log LOG "],["chip-seq-analysis.html", "Chapter 9 ChIP-seq analysis", " Chapter 9 ChIP-seq analysis Learning objectives: THESE ARE NICE TO HAVE BUT NOT ABSOLUTELY NECESSARY "],["slide-1-6.html", "9.1 SLIDE 1", " 9.1 SLIDE 1 ADD SLIDES AS SECTIONS (##). TRY TO KEEP THEM RELATIVELY SLIDE-LIKE; THESE ARE NOTES, NOT THE BOOK ITSELF. "],["meeting-videos-8.html", "9.2 Meeting Videos", " 9.2 Meeting Videos 9.2.1 Cohort 1 Meeting chat log LOG "],["dna-methylation-analysis-using-bisulfite-sequencing-data.html", "Chapter 10 DNA methylation analysis using bisulfite sequencing data", " Chapter 10 DNA methylation analysis using bisulfite sequencing data Learning objectives: THESE ARE NICE TO HAVE BUT NOT ABSOLUTELY NECESSARY "],["slide-1-7.html", "10.1 SLIDE 1", " 10.1 SLIDE 1 ADD SLIDES AS SECTIONS (##). TRY TO KEEP THEM RELATIVELY SLIDE-LIKE; THESE ARE NOTES, NOT THE BOOK ITSELF. "],["meeting-videos-9.html", "10.2 Meeting Videos", " 10.2 Meeting Videos 10.2.1 Cohort 1 Meeting chat log LOG "],["multi-omics-analysis.html", "Chapter 11 Multi-omics Analysis", " Chapter 11 Multi-omics Analysis Learning objectives: THESE ARE NICE TO HAVE BUT NOT ABSOLUTELY NECESSARY "],["slide-1-8.html", "11.1 SLIDE 1", " 11.1 SLIDE 1 ADD SLIDES AS SECTIONS (##). TRY TO KEEP THEM RELATIVELY SLIDE-LIKE; THESE ARE NOTES, NOT THE BOOK ITSELF. "],["meeting-videos-10.html", "11.2 Meeting Videos", " 11.2 Meeting Videos 11.2.1 Cohort 1 Meeting chat log LOG "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
